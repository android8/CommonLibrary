// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using FileUpload.Models;
using Microsoft.EntityFrameworkCore;

namespace FileUpload.Models
{
  public partial class PCC_FITContext : DbContext
  {
    /* As inheriting from IdentityDbContext, no need to recreate AspNet DbSet */
    //public virtual DbSet<AspNetRoleClaims> AspNetRoleClaims { get; set; }
    //public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
    //public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
    //public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
    //public virtual DbSet<AspNetUserRoles> AspNetUserRoles { get; set; }
    //public virtual DbSet<AspNetUserTokens> AspNetUserTokens { get; set; }
    //public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
    public virtual DbSet<FilesOnDatabase> FilesOnDatabase { get; set; }
    public virtual DbSet<FilesOnFileSystem> FilesOnFileSystem { get; set; }
    public PCC_FITContext(DbContextOptions<PCC_FITContext> options) : base(options)
    {
    }


    protected override void OnConfiguring(DbContextOptionsBuilder options)
    {
      options.EnableSensitiveDataLogging(true);
      //IConfigurationRoot configuration = new ConfigurationBuilder()
      //  .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
      //  .AddJsonFile("appsettings.json")
      //  .Build();

      //options.UseSqlServer(configuration.GetConnectionString("PCC_FIT"));
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
      modelBuilder.HasAnnotation("Relational:DefaultSchema", "app"); /* after rerun EF Power Tools, make sure to change the default schema to shared */

      /* As inheriting from IdentityDbContext, no need to recreate AspNet DbSet */
      //modelBuilder.ApplyConfiguration(new AspNetRoleClaimsConfiguration());
      //modelBuilder.ApplyConfiguration(new AspNetRolesConfiguration());
      //modelBuilder.ApplyConfiguration(new AspNetUserClaimsConfiguration());
      //modelBuilder.ApplyConfiguration(new AspNetUserLoginsConfiguration());
      //modelBuilder.ApplyConfiguration(new AspNetUserRolesConfiguration());
      //modelBuilder.ApplyConfiguration(new AspNetUserTokensConfiguration());
      //modelBuilder.ApplyConfiguration(new AspNetUsersConfiguration());
      modelBuilder.ApplyConfiguration(new FilesOnDatabaseConfiguration());
      modelBuilder.ApplyConfiguration(new FilesOnFileSystemConfiguration());
      //modelBuilder.EnableSensitiveDataLogging()
      OnModelCreatingPartial(modelBuilder);

      //prevent requires a primary key to be defined error
      base.OnModelCreating(modelBuilder);

      //This should be re-added each time the EF CORE Power Tools is regenerated.  
      //A partial class approach should elivated this

      //seed the AspNetUsers table.  
      //modelBuilder.Seed();
      //modelBuilder.ApplyConfiguration(new CustomIdentityUserConfiguration());
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
  }
}
