// <auto-generated />
using System;
using FileUpload.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FileUpload.Migrations
{
    [DbContext(typeof(PCC_FITContext))]
    [Migration("20210202230108_rename_tables")]
    partial class rename_tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("app")
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("FileUpload.Models.FileOnDatabase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Extension");

                    b.HasIndex("Name", "Extension")
                        .IsUnique()
                        .HasDatabaseName("IX_FileNameExtension")
                        .HasFilter("[Name] IS NOT NULL AND [Extension] IS NOT NULL");

                    b.HasIndex("Name", "FileType")
                        .IsUnique()
                        .HasDatabaseName("IX_FileNameFileType")
                        .HasFilter("[Name] IS NOT NULL AND [FileType] IS NOT NULL");

                    b.ToTable("FileOnDatabase");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2021, 2, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Test file1 on database",
                            Extension = "txt",
                            FileType = "text",
                            Name = "test1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2021, 2, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Test file2 on database",
                            Extension = "txt",
                            FileType = "text",
                            Name = "test2"
                        });
                });

            modelBuilder.Entity("FileUpload.Models.FileOnFileSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Extension");

                    b.HasIndex("Name", "Extension")
                        .IsUnique()
                        .HasDatabaseName("IX_FileNameExtension")
                        .HasFilter("[Name] IS NOT NULL AND [Extension] IS NOT NULL");

                    b.HasIndex("Name", "FileType")
                        .IsUnique()
                        .HasDatabaseName("IX_FileNameFileType")
                        .HasFilter("[Name] IS NOT NULL AND [FileType] IS NOT NULL");

                    b.ToTable("FileOnFileSystem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Extension = "txt",
                            FilePath = "c:\\users\\vhaporsunc\\download",
                            FileType = "text",
                            Name = "test1"
                        },
                        new
                        {
                            Id = 2,
                            Extension = "txt",
                            FilePath = "c:\\users\\vhaporsunc\\download",
                            FileType = "text",
                            Name = "test2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
